{"version":3,"file":"js/848.60ff148d.js","mappings":"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","sources":["webpack://lac/./src/kernel/api/methods/Offer.ts","webpack://lac/./src/kernel/constants/Vat.ts","webpack://lac/./src/kernel/lib/NumberFormat.ts","webpack://lac/./src/kernel/validation/vuelidate/minNumberRules.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useFields.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useWatch.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useSetFormula.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useInitialParams.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/usePrepareData.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useCalculate.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useFillForm.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useInit.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useSubmit.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/use/useData.ts","webpack://lac/./src/views/modules/CrudForms/LacOfferForm/useOfferForm.ts","webpack://lac/./src/views/components/form/input/LacInputNumber.vue?b4a7","webpack://lac/./src/views/components/form/input/LacInputNumber.vue"],"sourcesContent":["import { getHttp } from \"@/kernel/api/http\";\r\nimport { ApiResponseType, ApiRequestListOptionsType } from \"@/kernel/api/types\";\r\nimport { NotRequestException } from \"@/kernel/lib/exceptions/not-request.exception\";\r\nimport {\r\n  OfferAddData,\r\n  OfferCalcData,\r\n  OfferCalcParamsData,\r\n  OfferGetData,\r\n  OfferEditData,\r\n} from \"@/kernel/api/dto/Offer\";\r\nimport { ApiBackendSearchParamsType } from \"@/kernel/lib/ApiBackend/ApiBackend\";\r\n\r\nexport const getOfferCalc = async (\r\n  payload: ApiBackendSearchParamsType\r\n): Promise<ApiResponseType<OfferCalcData>> => {\r\n  const res = await getHttp().get<ApiResponseType<OfferCalcData> | false>(\r\n    \"/offer/calc\",\r\n    {\r\n      searchParams: payload,\r\n    }\r\n  );\r\n\r\n  if (!res) {\r\n    throw new NotRequestException(getOfferCalc.name);\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport const getOfferDelete = async (id: number): Promise<ApiResponseType> => {\r\n  const res = await getHttp().get<ApiResponseType | false>(\"/offer/delete\", {\r\n    searchParams: {\r\n      offer_id: id,\r\n    },\r\n  });\r\n\r\n  if (!res) {\r\n    throw new NotRequestException(getOfferDelete.name);\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport const getOfferGet = async (\r\n  id: number\r\n): Promise<ApiResponseType<OfferGetData>> => {\r\n  const res = await getHttp().get<ApiResponseType<OfferGetData> | false>(\r\n    \"/offer/get\",\r\n    {\r\n      searchParams: {\r\n        offer_id: id,\r\n      },\r\n    }\r\n  );\r\n\r\n  if (!res) {\r\n    throw new NotRequestException(getOfferGet.name);\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport const getOfferList = async (\r\n  params?: ApiRequestListOptionsType\r\n): Promise<ApiResponseType<OfferGetData[]>> => {\r\n  const res = await getHttp().get<ApiResponseType<OfferGetData[]> | false>(\r\n    \"/offer/list\",\r\n    { searchParams: { ...params } }\r\n  );\r\n\r\n  if (!res) {\r\n    throw new NotRequestException(getOfferList.name);\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport const postOfferAdd = async (\r\n  payload: OfferAddData\r\n): Promise<ApiResponseType> => {\r\n  const res = await getHttp().post<ApiResponseType | false>(\"/offer/add\", {\r\n    ...payload,\r\n    param: JSON.stringify(payload.param),\r\n  });\r\n\r\n  if (!res) {\r\n    throw new NotRequestException(postOfferAdd.name);\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport const postOfferEdit = async (\r\n  payload: OfferEditData\r\n): Promise<ApiResponseType> => {\r\n  const res = await getHttp().post<ApiResponseType | false>(\"/offer/edit\", {\r\n    ...payload,\r\n    param: JSON.stringify(payload.param),\r\n  });\r\n\r\n  if (!res) {\r\n    throw new NotRequestException(postOfferEdit.name);\r\n  }\r\n\r\n  return res;\r\n};\r\n","export const VAT = 10;\r\n","export const numberPrettify = (value: number | string) =>\r\n  new Intl.NumberFormat(\"ru-RU\").format(\r\n    typeof value === \"string\"\r\n      ? +value.replaceAll(/\\s/g, \"\").replace(\",\", \".\")\r\n      : value\r\n  );\r\nexport const numberPrettifyWithDigits = (\r\n  value: number | string,\r\n  digits = 0\r\n) => {\r\n  return new Intl.NumberFormat(\"ru-RU\", {\r\n    minimumFractionDigits: digits,\r\n    maximumFractionDigits: digits,\r\n  })\r\n    .format(\r\n      typeof value === \"string\"\r\n        ? +value.replaceAll(/\\s/g, \"\").replace(\",\", \".\")\r\n        : value\r\n    )\r\n    .replace(\",\", \".\");\r\n};\r\n","import { helpers } from \"@vuelidate/validators\";\r\n\r\nexport const minNumberRules = (min?: number) => ({\r\n  min: helpers.withMessage(\r\n    `Минимальное значение ${min || 0}`,\r\n    (value: string) => Number(value.replace(/\\s/g, \"\")) >= (min || 0)\r\n  ),\r\n});\r\n","import { ReactiveVariable } from \"vue/macros\";\r\nimport {\r\n  FormFieldNumberProps,\r\n  FormFieldProps,\r\n  FormFieldSelectProps,\r\n} from \"@/views/components/form/types\";\r\nimport { ValueTextType } from \"@/kernel/entities/types\";\r\nimport { reactive } from \"vue\";\r\nimport { requiredRules } from \"@/kernel/validation/vuelidate/requiredRules\";\r\nimport { minNumberRules } from \"@/kernel/validation/vuelidate/minNumberRules\";\r\nimport { maxLengthRules } from \"@/kernel/validation/vuelidate/maxLengthRules\";\r\n\r\ntype OfferFormCommonParamsFields = {\r\n  partner: FormFieldSelectProps<ValueTextType>;\r\n  point: FormFieldSelectProps<ValueTextType>;\r\n  subject: FormFieldSelectProps<ValueTextType>;\r\n  statusSelect: FormFieldSelectProps<ValueTextType>;\r\n  weight: FormFieldNumberProps;\r\n  carCount: FormFieldNumberProps;\r\n};\r\n\r\ntype OfferFormBaseParamsFields = ReactiveVariable<{\r\n  base_price: FormFieldNumberProps;\r\n  base_dry_matter: FormFieldNumberProps;\r\n  base_price_with_tax: FormFieldNumberProps;\r\n  protein_rate: FormFieldNumberProps;\r\n  formula: FormFieldSelectProps<ValueTextType>;\r\n  fat_rate: FormFieldNumberProps;\r\n  base_protein: FormFieldNumberProps;\r\n  protein_correction: FormFieldNumberProps;\r\n  base_fat: FormFieldNumberProps;\r\n  fat_correction: FormFieldNumberProps;\r\n  max_fat: FormFieldNumberProps;\r\n}>;\r\n\r\ntype OfferFormFactParamsFields = ReactiveVariable<{\r\n  actual_protein: FormFieldNumberProps;\r\n  sort: FormFieldSelectProps<ValueTextType>;\r\n  actual_fat: FormFieldNumberProps;\r\n  class_rate: FormFieldNumberProps;\r\n  actual_dry_matter: FormFieldNumberProps;\r\n}>;\r\n\r\ntype OfferFormCalculateParamsFields = ReactiveVariable<{\r\n  final_price: FormFieldNumberProps;\r\n  final_price_with_vat: FormFieldNumberProps;\r\n  cost: FormFieldNumberProps;\r\n  cost_with_vat: FormFieldNumberProps;\r\n}>;\r\n\r\ntype OfferFormOtherParamsFields = ReactiveVariable<{\r\n  other_price: FormFieldNumberProps;\r\n  comment: FormFieldProps;\r\n}>;\r\n\r\nexport type OfferFormFields = {\r\n  commonParams: OfferFormCommonParamsFields;\r\n  baseParams: OfferFormBaseParamsFields;\r\n  factParams: OfferFormFactParamsFields;\r\n  calculateParams: OfferFormCalculateParamsFields;\r\n  other: OfferFormOtherParamsFields;\r\n};\r\n\r\nexport const useFields = () => {\r\n  const commonParams: OfferFormCommonParamsFields = {\r\n    partner: {\r\n      value: null,\r\n      id: \"partner_id\",\r\n      label: \"Поставщик\",\r\n      items: [],\r\n      rules: requiredRules(),\r\n      placeholder: \"\",\r\n      available: true,\r\n    },\r\n    point: {\r\n      value: null,\r\n      id: \"point_id\",\r\n      label: \"Пункт\",\r\n      items: [],\r\n      rules: requiredRules(),\r\n      placeholder: \"\",\r\n      available: true,\r\n    },\r\n    subject: {\r\n      value: null,\r\n      id: \"subject\",\r\n      label: \"Предмет\",\r\n      items: [],\r\n      rules: requiredRules(),\r\n      placeholder: \"\",\r\n      available: true,\r\n    },\r\n    statusSelect: {\r\n      value: null,\r\n      id: \"status\",\r\n      label: \"Статус\",\r\n      items: [],\r\n      rules: requiredRules(),\r\n      placeholder: \"Выберите статус\",\r\n      available: true,\r\n    },\r\n    weight: {\r\n      id: \"weight\",\r\n      label: \"Вес\",\r\n      value: \"\",\r\n      unit: \"кг\",\r\n      step: 1000,\r\n      min: 0,\r\n      max: 100000,\r\n      afterDot: 0,\r\n      rules: {\r\n        ...requiredRules(),\r\n        ...minNumberRules(1),\r\n      },\r\n      available: true,\r\n    },\r\n    carCount: {\r\n      id: \"carCount\",\r\n      label: \"Количество машин\",\r\n      value: \"\",\r\n      unit: \"шт\",\r\n      step: 0.01,\r\n      min: 0,\r\n      afterDot: 2,\r\n      rules: {},\r\n      available: true,\r\n    },\r\n  };\r\n\r\n  const baseParams: OfferFormBaseParamsFields = reactive({\r\n    base_price: {\r\n      id: \"base_price\",\r\n      label: \"Базовая цена (без НДС)\",\r\n      unit: \"₽/кг\",\r\n      value: \"\",\r\n      hidden: \"\",\r\n      afterDot: 2,\r\n      step: 0.5,\r\n      min: 0,\r\n      max: 50,\r\n      rules: requiredRules(),\r\n      available: true,\r\n    },\r\n    base_dry_matter: {\r\n      id: \"base_dry_matter\",\r\n      label: \"Базовые сухие вещества\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    base_price_with_tax: {\r\n      id: \"base_price_with_tax\",\r\n      label: \"Базовая цена (с НДС)\",\r\n      unit: \"₽/кг\",\r\n      value: \"\",\r\n      afterDot: 2,\r\n      step: 0.5,\r\n      min: 0,\r\n      max: 55,\r\n      available: true,\r\n    },\r\n    protein_rate: {\r\n      id: \"protein_rate\",\r\n      label: \"Доля показателя белка\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    formula: {\r\n      value: null,\r\n      id: \"formula\",\r\n      label: \"Тип формулы рассчета\",\r\n      items: [],\r\n      rules: requiredRules(),\r\n      placeholder: \"\",\r\n      available: true,\r\n    },\r\n    fat_rate: {\r\n      id: \"fat_rate\",\r\n      label: \"Доля показателя жира\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    base_protein: {\r\n      id: \"base_protein\",\r\n      label: \"Базовый белок\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    protein_correction: {\r\n      id: \"protein_correction\",\r\n      label: \"Поправка на белок\",\r\n      unit: \"коп\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    base_fat: {\r\n      id: \"base_fat\",\r\n      label: \"Базовый жир\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    fat_correction: {\r\n      id: \"fat_correction\",\r\n      label: \"Поправки на жир\",\r\n      unit: \"коп\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    max_fat: {\r\n      id: \"max_fat\",\r\n      label: \"Потолок жира\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n  });\r\n  const factParams: OfferFormFactParamsFields = reactive({\r\n    actual_protein: {\r\n      id: \"actual_protein\",\r\n      label: \"Фактический белок\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    sort: {\r\n      value: null,\r\n      id: \"sort\",\r\n      label: \"Сорт\",\r\n      items: [],\r\n      rules: requiredRules(),\r\n      placeholder: \"Выберите сорт\",\r\n      available: true,\r\n    },\r\n    actual_fat: {\r\n      id: \"actual_fat\",\r\n      label: \"Фактический жир\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n    class_rate: {\r\n      id: \"class_rate\",\r\n      label: \"Коэффициент сортности\",\r\n      value: \"1.000\",\r\n      afterDot: 3,\r\n      step: 0.1,\r\n      available: true,\r\n    },\r\n    actual_dry_matter: {\r\n      id: \"actual_dry_matter\",\r\n      label: \"Фактические сухие вещества\",\r\n      unit: \"%\",\r\n      value: \"\",\r\n      available: true,\r\n    },\r\n  });\r\n  const calculateParams: OfferFormCalculateParamsFields = reactive({\r\n    final_price: {\r\n      id: \"final_price\",\r\n      label: \"Конечная цена (без НДС)\",\r\n      unit: \"₽/кг\",\r\n      value: \"\",\r\n      min: 0,\r\n      step: 0.01,\r\n      afterDot: 2,\r\n      available: true,\r\n    },\r\n    cost: {\r\n      id: \"cost\",\r\n      label: \"Сумма (без НДС)\",\r\n      unit: \"₽\",\r\n      value: \"\",\r\n      min: 0,\r\n      afterDot: 0,\r\n      available: true,\r\n    },\r\n    final_price_with_vat: {\r\n      id: \"final_price_with_vat\",\r\n      label: \"Конечная цена (с НДС)\",\r\n      unit: \"₽/кг\",\r\n      value: \"\",\r\n      min: 0,\r\n      step: 0.01,\r\n      afterDot: 2,\r\n      available: true,\r\n    },\r\n    cost_with_vat: {\r\n      id: \"cost_with_vat\",\r\n      label: \"Сумма (с НДС)\",\r\n      unit: \"₽\",\r\n      value: \"\",\r\n      min: 0,\r\n      afterDot: 0,\r\n      available: true,\r\n    },\r\n  });\r\n\r\n  const other: OfferFormOtherParamsFields = reactive({\r\n    other_price: {\r\n      id: \"other_price\",\r\n      label: \"Прочие расходы\",\r\n      unit: \"₽/кг\",\r\n      value: \"\",\r\n      afterDot: 2,\r\n      step: 0.1,\r\n      min: 0,\r\n      max: 10,\r\n      available: true,\r\n    },\r\n    comment: {\r\n      id: \"comment\",\r\n      label: \"Комментарий\",\r\n      value: \"\",\r\n      rules: maxLengthRules(),\r\n    },\r\n  });\r\n\r\n  const fields = reactive<OfferFormFields>({\r\n    commonParams,\r\n    baseParams,\r\n    factParams,\r\n    calculateParams,\r\n    other,\r\n  });\r\n\r\n  return {\r\n    fields,\r\n  };\r\n};\r\n","import { nextTick, Ref, ref, watch, WatchStopHandle } from \"vue\";\r\nimport { OfferFormFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\nimport { FormFieldSelectProps } from \"@/views/components/form/types\";\r\nimport { ReactiveVariable } from \"vue/macros\";\r\n\r\ntype CallbacksCollection = {\r\n  updateSubject: (\r\n    path: ReactiveVariable<FormFieldSelectProps>,\r\n    type: string,\r\n    pointId?: number,\r\n    subject?: number\r\n  ) => Promise<void>;\r\n  updatePoint: (\r\n    path: ReactiveVariable<FormFieldSelectProps>,\r\n    type: \"offer\" | \"request\",\r\n    partnerId: number | undefined,\r\n    pointId?: number\r\n  ) => Promise<void>;\r\n  updateFormula: (\r\n    path: ReactiveVariable<FormFieldSelectProps>,\r\n    subject: string | undefined,\r\n    formula?: string | undefined\r\n  ) => Promise<void>;\r\n  initialParams: () => void;\r\n  recalculateFatRate: () => void;\r\n  recalculateBasePrice: () => void;\r\n  recalculateBasePriceWithVat: () => void;\r\n  recalculateCarCount: () => void;\r\n  recalculateWeight: () => void;\r\n  fetchCalculate: () => void;\r\n};\r\n\r\nexport const useWatch = (\r\n  fields: ReactiveVariable<OfferFormFields>,\r\n  callbacks: CallbacksCollection\r\n) => {\r\n  const {\r\n    updateSubject,\r\n    updatePoint,\r\n    updateFormula,\r\n    initialParams,\r\n    recalculateFatRate,\r\n    recalculateBasePrice,\r\n    recalculateBasePriceWithVat,\r\n    recalculateCarCount,\r\n    recalculateWeight,\r\n    fetchCalculate,\r\n  } = callbacks;\r\n\r\n  const watchLock = ref(false);\r\n  const watchers: Ref<WatchStopHandle[]> = ref([]);\r\n\r\n  function unwatch() {\r\n    while (watchers.value.length) {\r\n      const fn = watchers.value.pop();\r\n      fn && fn();\r\n    }\r\n  }\r\n\r\n  function setWatchers() {\r\n    watchers.value.push(\r\n      watch(\r\n        () => fields.commonParams.partner.value?.value,\r\n        async (newValue) => {\r\n          if (watchLock.value) return;\r\n\r\n          const partnerId = newValue ? parseInt(newValue) : undefined;\r\n          await updatePoint(fields.commonParams.point, \"offer\", partnerId);\r\n        }\r\n      )\r\n    );\r\n\r\n    watchers.value.push(\r\n      watch(\r\n        () => fields.commonParams.point.value?.value,\r\n        async (newValue) => {\r\n          if (watchLock.value) return;\r\n\r\n          const pointId = newValue ? parseInt(newValue) : undefined;\r\n          await updateSubject(fields.commonParams.subject, \"offer\", pointId);\r\n        }\r\n      )\r\n    );\r\n\r\n    watchers.value.push(\r\n      watch(\r\n        () => fields.commonParams.subject.value?.value,\r\n        async () => {\r\n          if (watchLock.value) return;\r\n\r\n          const subjValue = fields.commonParams.subject.value\r\n            ? fields.commonParams.subject.value.value\r\n            : undefined;\r\n          await updateFormula(fields.baseParams.formula, subjValue);\r\n          initialParams();\r\n        }\r\n      )\r\n    );\r\n\r\n    watchers.value.push(\r\n      watch(\r\n        () => fields.baseParams.formula.value,\r\n        () => {\r\n          if (watchLock.value) return;\r\n\r\n          initialParams();\r\n        }\r\n      )\r\n    );\r\n    watchers.value.push(\r\n      watch(\r\n        () => fields.baseParams.protein_rate.value,\r\n        () => {\r\n          if (watchLock.value) return;\r\n          recalculateFatRate();\r\n        }\r\n      )\r\n    );\r\n    watchers.value.push(\r\n      watch(\r\n        () => [\r\n          fields.baseParams.base_price.value,\r\n          fields.baseParams.base_price.hidden,\r\n        ],\r\n        ([, newHid], [, prevHid]) => {\r\n          if (watchLock.value) return;\r\n          if (newHid !== prevHid) recalculateBasePriceWithVat();\r\n        }\r\n      )\r\n    );\r\n    watchers.value.push(\r\n      watch(\r\n        () => fields.baseParams.base_price_with_tax.value,\r\n        () => {\r\n          if (watchLock.value) return;\r\n\r\n          recalculateBasePrice();\r\n        }\r\n      )\r\n    );\r\n    watchers.value.push(\r\n      watch(\r\n        () => ({\r\n          subject: fields.commonParams.subject.value,\r\n          status: fields.commonParams.statusSelect.value,\r\n          weight: fields.commonParams.weight.value,\r\n          baseParams: fields.baseParams,\r\n          factParams: fields.factParams,\r\n          otherPrice: fields.other.other_price,\r\n        }),\r\n        () => {\r\n          if (watchLock.value) return;\r\n\r\n          fetchCalculate();\r\n        },\r\n        { deep: true }\r\n      )\r\n    );\r\n    watchers.value.push(\r\n      watch(\r\n        () => fields.commonParams.weight.value,\r\n        () => {\r\n          if (watchLock.value) return;\r\n          recalculateCarCount();\r\n        }\r\n      )\r\n    );\r\n    watchers.value.push(\r\n      watch(\r\n        () => fields.commonParams.carCount.value,\r\n        () => {\r\n          if (watchLock.value) return;\r\n          recalculateWeight();\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  return {\r\n    setWatchers,\r\n    lockWatchers: () => (watchLock.value = true),\r\n    unlockWatchers: () => (watchLock.value = false),\r\n  };\r\n};\r\n","import { ValueTextType } from \"@/kernel/entities/types\";\r\nimport { ReactiveVariable } from \"vue/macros\";\r\nimport { OfferFormFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useStore } from \"@/store\";\r\n\r\nexport const useSetFormula = (fields: ReactiveVariable<OfferFormFields>) => {\r\n  const { dictionary } = storeToRefs(useStore());\r\n\r\n  function setFormula() {\r\n    const formula = dictionary.value.offer.formula;\r\n    const available_formula_by_subject =\r\n      dictionary.value.offer.available_formula_by_subject;\r\n\r\n    fields.baseParams.formula.items = Object.entries(formula)\r\n      .filter(([f, _]) =>\r\n        fields.commonParams.subject.value?.value\r\n          ? available_formula_by_subject[\r\n              fields.commonParams.subject.value.value\r\n            ].some((el) => el === f)\r\n          : false\r\n      )\r\n      .map(\r\n        ([key, value]): ValueTextType => ({\r\n          value: key,\r\n          text: value,\r\n        })\r\n      );\r\n\r\n    if (fields.commonParams.subject.value?.value === \"milk\") {\r\n      const foundStandard = fields.baseParams.formula.items.find(\r\n        (el) => el.value === \"standart\"\r\n      );\r\n      if (foundStandard) {\r\n        fields.baseParams.formula.value = foundStandard;\r\n      } else {\r\n        const foundPhysicalWeight = fields.baseParams.formula.items.find(\r\n          (el) => el.value === \"physical_weight\"\r\n        );\r\n        foundPhysicalWeight &&\r\n          (fields.baseParams.formula.value = foundPhysicalWeight);\r\n\r\n        if (dictionary.value.offer.status.ready_to_sell) {\r\n          fields.commonParams.statusSelect.value =\r\n            fields.commonParams.statusSelect.items.find(\r\n              (el) => el.value === \"ready_to_sell\"\r\n            ) || null;\r\n        }\r\n      }\r\n    } else {\r\n      const foundPhysicalWeight = fields.baseParams.formula.items.find(\r\n        (el) => el.value === \"physical_weight\"\r\n      );\r\n      foundPhysicalWeight &&\r\n        (fields.baseParams.formula.value = foundPhysicalWeight);\r\n\r\n      if (dictionary.value.offer.status.ready_to_sell) {\r\n        fields.commonParams.statusSelect.value =\r\n          fields.commonParams.statusSelect.items.find(\r\n            (el) => el.value === \"ready_to_sell\"\r\n          ) || null;\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    setFormula,\r\n  };\r\n};\r\n","import { ReactiveVariable } from \"vue/macros\";\r\nimport { OfferFormFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useStore } from \"@/store\";\r\n\r\nexport const useInitialParams = (fields: ReactiveVariable<OfferFormFields>) => {\r\n  const { dictionary } = storeToRefs(useStore());\r\n\r\n  function initialParams(): void {\r\n    const properties = dictionary.value.offer.property;\r\n\r\n    const fieldsNames = [\r\n      \"protein_rate\",\r\n      \"actual_dry_matter\",\r\n      \"actual_fat\",\r\n      \"actual_protein\",\r\n      \"base_dry_matter\",\r\n      \"base_fat\",\r\n      \"base_protein\",\r\n      \"fat_correction\",\r\n      \"fat_rate\",\r\n      \"max_fat\",\r\n      \"protein_correction\",\r\n      \"protein_rate\",\r\n    ];\r\n\r\n    fieldsNames.forEach((name: string) => {\r\n      //@ts-ignore\r\n      if (fields.baseParams[name]) {\r\n        //@ts-ignore\r\n        fields.baseParams[name].available = false;\r\n      }\r\n      //@ts-ignore\r\n      if (fields.factParams[name]) {\r\n        //@ts-ignore\r\n        fields.factParams[name].available = false;\r\n      }\r\n    });\r\n\r\n    const processParams = (fieldset: string) => {\r\n      const formula = fields.baseParams.formula.value?.value || \"\";\r\n      const subject = fields.commonParams.subject.value?.value || \"\";\r\n      // @ts-ignore\r\n      const fieldsetObject = fields[fieldset];\r\n      const propertiesArray = Object.entries(properties);\r\n      if (fieldsetObject) {\r\n        const excludedFields = Object.entries(fieldsetObject).filter(\r\n          ([key, value]) => propertiesArray.some(([k, val]) => k === key)\r\n        );\r\n        excludedFields.forEach(([key, value]) => {\r\n          // @ts-ignore\r\n          value.value = \"\";\r\n        });\r\n      }\r\n\r\n      propertiesArray.forEach(([key, value]) => {\r\n        // @ts-ignore\r\n        const field = fields[fieldset][key];\r\n        const params = value.cond[formula]?.[subject];\r\n        if (field && params) {\r\n          typeof params.max === \"number\"\r\n            ? (field.max = params.max)\r\n            : delete field.max;\r\n\r\n          if (typeof params.min === \"number\") {\r\n            field.min = params.min;\r\n          } else {\r\n            delete field.min;\r\n          }\r\n\r\n          if (typeof params.fix === \"number\") {\r\n            field.min = params.fix;\r\n            field.max = params.fix;\r\n            field.fix = params.fix;\r\n          } else {\r\n            delete field.fix;\r\n          }\r\n          typeof params.after_dot === \"number\"\r\n            ? (field.afterDot = params.after_dot)\r\n            : delete field.afterDot;\r\n          typeof params.step === \"number\"\r\n            ? (field.step = params.step)\r\n            : delete field.step;\r\n\r\n          field.available = true;\r\n\r\n          if (params.def !== undefined) {\r\n            field.value =\r\n              typeof field.afterDot === \"number\"\r\n                ? params.def.toFixed(field.afterDot)\r\n                : String(params.def);\r\n          } else {\r\n            field.value =\r\n              typeof params.fix === \"number\"\r\n                ? typeof field.afterDot === \"number\"\r\n                  ? params.fix.toFixed(field.afterDot)\r\n                  : String(params.fix)\r\n                : \"\";\r\n          }\r\n\r\n          // @ts-ignore\r\n          fields[fieldset][key] = field;\r\n        }\r\n      });\r\n    };\r\n\r\n    processParams(\"factParams\");\r\n    processParams(\"baseParams\");\r\n\r\n    if (\r\n      Number(fields.baseParams.protein_rate.value) +\r\n        Number(fields.baseParams.fat_rate.value) >\r\n      100\r\n    ) {\r\n      fields.baseParams.fat_rate.value = String(\r\n        100 - Number(fields.baseParams.protein_rate.value)\r\n      );\r\n    }\r\n  }\r\n\r\n  return {\r\n    initialParams,\r\n  };\r\n};\r\n","import { OfferAddData } from \"@/kernel/api/dto/Offer\";\r\nimport { ReactiveVariable } from \"vue/macros\";\r\nimport { OfferFormFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\n\r\nexport const usePrepareData = (fields: ReactiveVariable<OfferFormFields>) => {\r\n  function prepareData(): OfferAddData | null {\r\n    if (\r\n      !fields.commonParams.partner.value ||\r\n      !fields.commonParams.subject.value ||\r\n      !fields.baseParams.formula.value ||\r\n      !fields.baseParams.base_price.hidden ||\r\n      !fields.factParams.sort.value\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    const res: Record<string, any> = {\r\n      partner_id: String(fields.commonParams.partner.value?.value),\r\n      weight: fields.commonParams.weight.value.replace(/\\s/g, \"\"),\r\n      car_count: fields.commonParams.carCount.value,\r\n      class: fields.factParams.sort.value?.value,\r\n      class_rate: fields.factParams.class_rate.value,\r\n      base_price: fields.baseParams.base_price.hidden,\r\n      other_price: fields.other.other_price.value,\r\n      formula_type: fields.baseParams.formula.value?.value,\r\n      param: {\r\n        subject: fields.commonParams.subject.value.value,\r\n        formula: fields.baseParams.formula.value?.value,\r\n      },\r\n    };\r\n\r\n    if (fields.other.comment.value) {\r\n      res.comment = fields.other.comment.value;\r\n    }\r\n\r\n    if (fields.commonParams.point.value) {\r\n      res.point_id = fields.commonParams.point.value.value;\r\n    }\r\n\r\n    Object.entries(fields.baseParams)\r\n      .filter(\r\n        ([key, value]) =>\r\n          value.available &&\r\n          key !== \"formula\" &&\r\n          key !== \"base_price\" &&\r\n          key !== \"base_price_with_tax\"\r\n      )\r\n      .forEach(([key, value]) => {\r\n        res.param[key] = value.value;\r\n      });\r\n\r\n    Object.entries(fields.factParams)\r\n      .filter(\r\n        ([key, value]) =>\r\n          value.available && key !== \"sort\" && key !== \"class_rate\"\r\n      )\r\n      .forEach(([key, value]) => {\r\n        res.param[key] = value.value;\r\n      });\r\n\r\n    fields.commonParams.statusSelect.value &&\r\n      (res.status = fields.commonParams.statusSelect.value.value);\r\n    return res as OfferAddData;\r\n  }\r\n\r\n  return {\r\n    prepareData,\r\n  };\r\n};\r\n","import { debounce } from \"@/kernel/lib/debounce\";\r\nimport { ReactiveVariable } from \"vue/macros\";\r\nimport { OfferFormFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\nimport { nextTick, Ref, ref } from \"vue\";\r\nimport { VAT } from \"@/kernel/constants/Vat\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useStore } from \"@/store\";\r\nimport { getOfferCalc } from \"@/kernel/api/methods/Offer\";\r\nimport { usePrepareData } from \"@/views/modules/CrudForms/LacOfferForm/use/usePrepareData\";\r\nimport { numberPrettifyWithDigits } from \"@/kernel/lib/NumberFormat\";\r\n\r\nexport const useCalculate = (\r\n  fields: ReactiveVariable<OfferFormFields>,\r\n  isInit: Ref<boolean>\r\n) => {\r\n  const { dictionary } = storeToRefs(useStore());\r\n  const recalculatePriceLock = ref(false);\r\n  const calculateLock = ref(false);\r\n  const { prepareData } = usePrepareData(fields);\r\n\r\n  function recalculateFatRate() {\r\n    if (\r\n      fields.commonParams.subject.value &&\r\n      fields.commonParams.subject.value.value === \"milk\" &&\r\n      fields.baseParams.formula.value &&\r\n      fields.baseParams.formula.value.value == \"standart\"\r\n    )\r\n      fields.baseParams.fat_rate.value = String(\r\n        100 - Number(fields.baseParams.protein_rate.value)\r\n      );\r\n  }\r\n\r\n  function recalculateBasePriceWithVat(init?: boolean) {\r\n    if (!recalculatePriceLock.value) {\r\n      recalculatePriceLock.value = true;\r\n\r\n      const basePrice = Number(fields.baseParams.base_price.value);\r\n      const basePriceHidden = Number(fields.baseParams.base_price.hidden);\r\n\r\n      if (init) {\r\n        // инициализируем.\r\n        fields.baseParams.base_price.hidden = basePrice.toFixed(4);\r\n        fields.baseParams.base_price.value = basePrice.toFixed(2);\r\n      } else {\r\n        if (basePriceHidden > (fields.baseParams.base_price.max || 0)) {\r\n          // ситуация когда срезали значение по max лимиту, а хидден не изменили.\r\n          fields.baseParams.base_price.hidden = basePrice.toFixed(4);\r\n        } else if (basePriceHidden < (fields.baseParams.base_price.min || 0)) {\r\n          // ситуация когда срезали значение по min лимиту, а хидден не изменили.\r\n          fields.baseParams.base_price.hidden = basePrice.toFixed(4);\r\n        }\r\n      }\r\n\r\n      fields.baseParams.base_price_with_tax.value = (\r\n        basePrice * ((dictionary.value.offer.vat_rate || VAT) / 100) +\r\n        basePrice\r\n      ).toFixed(2);\r\n\r\n      nextTick().then(() => {\r\n        recalculatePriceLock.value = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  function recalculateBasePrice() {\r\n    if (!recalculatePriceLock.value) {\r\n      recalculatePriceLock.value = true;\r\n\r\n      const basePriceWithVat = Number(\r\n        fields.baseParams.base_price_with_tax.value\r\n      );\r\n      const hidden =\r\n        basePriceWithVat / (1 + (dictionary.value.offer.vat_rate || VAT) / 100);\r\n\r\n      fields.baseParams.base_price.hidden = hidden.toFixed(4);\r\n      fields.baseParams.base_price.value = hidden.toFixed(2);\r\n\r\n      nextTick().then(() => {\r\n        recalculatePriceLock.value = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  function recalculateCarCount() {\r\n    if (!recalculatePriceLock.value) {\r\n      recalculatePriceLock.value = true;\r\n\r\n      // из-за красивостей - вставляют пробелы в строках для отделения разрядов.\r\n      const weight = Number(\r\n        fields.commonParams.weight.value.replace(/\\s/g, \"\")\r\n      );\r\n      fields.commonParams.carCount.value = (weight / 27800).toFixed(2);\r\n\r\n      nextTick().then(() => {\r\n        recalculatePriceLock.value = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  async function recalculateWeight() {\r\n    if (!recalculatePriceLock.value) {\r\n      recalculatePriceLock.value = true;\r\n\r\n      const max = fields.commonParams.weight.max || 0;\r\n      const carCount = !fields.commonParams.carCount.value\r\n        ? 0\r\n        : parseFloat(fields.commonParams.carCount.value);\r\n      // const weight = carCount * 27800;\r\n      // if (weight <= max) {\r\n      //   fields.commonParams.weight.value = (carCount * 27800).toFixed(0);\r\n      // } else {\r\n      //   fields.commonParams.weight.value = max.toFixed(0);\r\n      //   fields.commonParams.carCount.value = (max / 27800).toFixed(2);\r\n      // }\r\n\r\n      fields.commonParams.weight.value = numberPrettifyWithDigits(\r\n        Math.min(max, carCount * 27800)\r\n      );\r\n\r\n      nextTick().then(() => {\r\n        recalculatePriceLock.value = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  const fetchCalculate = debounce(async () => {\r\n    await nextTick();\r\n    if (isInit.value && !calculateLock.value) {\r\n      calculateLock.value = true;\r\n      fields.calculateParams.cost.value = \"\";\r\n      fields.calculateParams.cost_with_vat.value = \"\";\r\n      fields.calculateParams.final_price.value = \"\";\r\n      fields.calculateParams.final_price_with_vat.value = \"\";\r\n\r\n      const data = prepareData();\r\n\r\n      if (data) {\r\n        const res = await getOfferCalc({\r\n          ...data,\r\n          param: JSON.stringify(data.param),\r\n        });\r\n\r\n        if (!res.error && res.data.info) {\r\n          const data = res.data.info;\r\n\r\n          fields.calculateParams.cost.value = numberPrettifyWithDigits(\r\n            data.cost\r\n          );\r\n          fields.calculateParams.cost_with_vat.value = numberPrettifyWithDigits(\r\n            data.cost_with_vat\r\n          );\r\n          fields.calculateParams.final_price.value = numberPrettifyWithDigits(\r\n            data.final_price,\r\n            2\r\n          );\r\n          fields.calculateParams.final_price_with_vat.value =\r\n            numberPrettifyWithDigits(data.final_price_with_vat, 2);\r\n        }\r\n      }\r\n\r\n      calculateLock.value = false;\r\n    }\r\n  }, 1500);\r\n\r\n  return {\r\n    recalculateFatRate,\r\n    recalculateBasePrice,\r\n    recalculateBasePriceWithVat,\r\n    recalculateCarCount,\r\n    recalculateWeight,\r\n    fetchCalculate,\r\n    calculateLock,\r\n    lockCalculate: () => (calculateLock.value = true),\r\n    unlockCalculate: () => (calculateLock.value = false),\r\n  };\r\n};\r\n","import { nextTick, Ref } from \"vue\";\r\nimport { ReactiveVariable } from \"vue/macros\";\r\nimport { OfferFormFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\nimport { OfferGetData } from \"@/kernel/api/dto/Offer\";\r\nimport { useUpdatePoints } from \"@/views/modules/CrudForms/LacOfferForm/use/useUpdatePoints\";\r\nimport { useCalculate } from \"@/views/modules/CrudForms/LacOfferForm/use/useCalculate\";\r\nimport { useSetFormula } from \"@/views/modules/CrudForms/LacOfferForm/use/useSetFormula\";\r\nimport { useInitialParams } from \"@/views/modules/CrudForms/LacOfferForm/use/useInitialParams\";\r\nimport { numberPrettifyWithDigits } from \"@/kernel/lib/NumberFormat\";\r\n\r\nexport const useFillForm = (\r\n  fields: ReactiveVariable<OfferFormFields>,\r\n  offerData: Ref<OfferGetData | null>,\r\n  isInit: Ref<boolean>,\r\n  lockWatchers: () => void,\r\n  unlockWatchers: () => void\r\n) => {\r\n  const { setFormula } = useSetFormula(fields);\r\n  const { initialParams } = useInitialParams(fields);\r\n  const { recalculateBasePriceWithVat, fetchCalculate } = useCalculate(\r\n    fields,\r\n    isInit\r\n  );\r\n\r\n  async function fillForm(): Promise<void> {\r\n    if (!offerData.value) return;\r\n\r\n    isInit.value = false;\r\n    lockWatchers();\r\n\r\n    fields.commonParams.weight.value = numberPrettifyWithDigits(\r\n      offerData.value!.weight\r\n    );\r\n\r\n    fields.commonParams.carCount.value = String(offerData.value.car_count);\r\n\r\n    fields.baseParams.base_price.value = String(offerData.value!.base_price);\r\n    recalculateBasePriceWithVat(true);\r\n\r\n    const className = fields.factParams.sort.items.find(\r\n      (el) => el.value === offerData.value!.class\r\n    );\r\n    className && (fields.factParams.sort.value = className);\r\n\r\n    offerData.value?.class_rate &&\r\n      (fields.factParams.class_rate.value = String(\r\n        offerData.value!.class_rate\r\n      ));\r\n\r\n    offerData.value?.other_price &&\r\n      (fields.other.other_price.value = String(offerData.value!.other_price));\r\n\r\n    offerData.value?.comment &&\r\n      (fields.other.comment.value = String(offerData.value!.comment));\r\n\r\n    const params = offerData.value?.param;\r\n    if (params) {\r\n      Object.entries(params).forEach(([key, value]) => {\r\n        // @ts-ignore\r\n        if (fields.baseParams[key]) {\r\n          // @ts-ignore\r\n          fields.baseParams[key].value = String(value);\r\n        } else {\r\n          // @ts-ignore\r\n          if (fields.factParams[key]) {\r\n            // @ts-ignore\r\n            fields.factParams[key].value = String(value);\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    await nextTick();\r\n    isInit.value = true;\r\n    await fetchCalculate();\r\n    unlockWatchers();\r\n  }\r\n\r\n  return {\r\n    fillForm,\r\n  };\r\n};\r\n","import { AvailableModalsEnum } from \"@/store/modal/types\";\r\nimport { computed, nextTick, reactive, Ref, ref } from \"vue\";\r\nimport { useStoreModal } from \"@/store/modal\";\r\nimport { ReactiveVariable } from \"vue/macros\";\r\nimport { OfferFormFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\nimport { useUpdate } from \"@/views/modules/CrudForms/use/useUpdate\";\r\nimport { storeToRefs } from \"pinia\";\r\nimport { useStore } from \"@/store\";\r\nimport { useStorePartner } from \"@/store/partner\";\r\nimport { useSetFormula } from \"@/views/modules/CrudForms/LacOfferForm/use/useSetFormula\";\r\nimport { ValueTextType } from \"@/kernel/entities/types\";\r\nimport { OfferGetData } from \"@/kernel/api/dto/Offer\";\r\nimport { useInitialParams } from \"@/views/modules/CrudForms/LacOfferForm/use/useInitialParams\";\r\n\r\nexport const useInit = (\r\n  fields: ReactiveVariable<OfferFormFields>,\r\n  isInit: Ref<boolean>,\r\n  offerData: Ref<OfferGetData | null>,\r\n  setWatchers: () => void\r\n) => {\r\n  const modals = useStoreModal();\r\n  const { dictionary } = storeToRefs(useStore());\r\n  const { initialParams } = useInitialParams(fields);\r\n  const {\r\n    updatePartner,\r\n    updatePoint,\r\n    updateSubject,\r\n    updateFormula,\r\n    updateStatus,\r\n  } = useUpdate(isInit);\r\n\r\n  const sortClassPriority: ReactiveVariable<Record<string, number>> = reactive({\r\n    extra: 2,\r\n    first: 3,\r\n    not_sorted: 5,\r\n    second: 4,\r\n    ultra: 1,\r\n  });\r\n\r\n  const sortClassComputed = computed(() => {\r\n    const classes: Record<string, { val: number; text: string }> = {};\r\n    const sortClass = dictionary.value?.point.class || {};\r\n    Object.entries(sortClass).forEach(([key, value]) => {\r\n      classes[key] = {\r\n        text: value,\r\n        val: sortClassPriority[key] || 0,\r\n      };\r\n    });\r\n\r\n    return Object.entries(classes)\r\n      .map(([key, value]) => ({\r\n        value: key,\r\n        text: value.text,\r\n        val: value.val,\r\n      }))\r\n      .sort((a, b) => a.val - b.val);\r\n  });\r\n\r\n  async function initSelects() {\r\n    let edit, partnerId, pointId, subject, formula, status;\r\n    if (offerData.value) {\r\n      edit = true;\r\n      partnerId = offerData.value.partner.partner_id;\r\n      pointId = offerData.value.point.point_id;\r\n      subject = offerData.value.subject;\r\n      formula = offerData.value.formula;\r\n      status = offerData.value.status;\r\n    }\r\n    await updatePartner(fields.commonParams.partner, partnerId);\r\n    if (!edit && fields.commonParams.partner.value) {\r\n      partnerId = parseInt(fields.commonParams.partner.value.value);\r\n    }\r\n    await updatePoint(fields.commonParams.point, \"offer\", partnerId, pointId);\r\n    if (!edit && fields.commonParams.point.value) {\r\n      pointId = parseInt(fields.commonParams.point.value.value);\r\n    }\r\n    await updateSubject(fields.commonParams.subject, \"offer\", pointId, subject);\r\n    const subjValue = fields.commonParams.subject.value\r\n      ? fields.commonParams.subject.value.value\r\n      : undefined;\r\n    await updateFormula(fields.baseParams.formula, subjValue, formula);\r\n    await updateStatus(fields.commonParams.statusSelect, \"offer\", status);\r\n\r\n    fields.factParams.sort.items.push(...sortClassComputed.value);\r\n    fields.factParams.sort.value =\r\n      fields.factParams.sort.items.find((el) => el.value === \"first\") || null;\r\n\r\n    if (fields.commonParams.subject.value) initialParams();\r\n    // вычисляем максимальное значение для количества машин.\r\n    fields.commonParams.carCount.max =\r\n      (fields.commonParams.weight.max || 0) / 27800;\r\n  }\r\n\r\n  async function init() {\r\n    modals.open(AvailableModalsEnum.LOADER);\r\n\r\n    await initSelects();\r\n    isInit.value = true;\r\n\r\n    await nextTick();\r\n    setWatchers();\r\n    modals.close();\r\n  }\r\n  return {\r\n    init,\r\n  };\r\n};\r\n","import { OfferAddData } from \"@/kernel/api/dto/Offer\";\r\nimport { AvailableModalsEnum } from \"@/store/modal/types\";\r\nimport { postOfferAdd, postOfferEdit } from \"@/kernel/api/methods/Offer\";\r\nimport { useStoreModal } from \"@/store/modal\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { ReactiveVariable } from \"vue/macros\";\r\nimport { OfferFormFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\nimport { usePrepareData } from \"@/views/modules/CrudForms/LacOfferForm/use/usePrepareData\";\r\nimport { nextTick } from \"vue\";\r\n\r\nexport const useSubmit = (fields: ReactiveVariable<OfferFormFields>) => {\r\n  const modals = useStoreModal();\r\n  const router = useRouter();\r\n  const { prepareData } = usePrepareData(fields);\r\n\r\n  async function submit() {\r\n    const data = prepareData() as OfferAddData;\r\n\r\n    if (data) {\r\n      modals.open(AvailableModalsEnum.LOADER);\r\n      const res = await postOfferAdd(data);\r\n\r\n      if (!res.error) {\r\n        modals.open(AvailableModalsEnum.SUCCESS, {\r\n          callback: () => router.back(),\r\n        });\r\n      } else {\r\n        modals.open(AvailableModalsEnum.ERROR, {\r\n          text: res.data.info || \"Ошибка создания предложения\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async function submitEdit(offer_id: number) {\r\n    await nextTick();\r\n    const data = prepareData();\r\n\r\n    if (data) {\r\n      modals.open(AvailableModalsEnum.LOADER);\r\n      const res = await postOfferEdit({ ...data, offer_id });\r\n\r\n      if (!res.error) {\r\n        modals.open(AvailableModalsEnum.SUCCESS, {\r\n          callback: () => router.back(),\r\n        });\r\n      } else {\r\n        modals.open(AvailableModalsEnum.ERROR, {\r\n          text: res.data.info || \"Ошибка редактирования предложения\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    submit,\r\n    submitEdit,\r\n  };\r\n};\r\n","import { getOfferGet } from \"@/kernel/api/methods/Offer\";\r\nimport { ref, Ref } from \"vue\";\r\nimport { OfferGetData } from \"@/kernel/api/dto/Offer\";\r\n\r\nexport const useData = () => {\r\n  const offerData: Ref<OfferGetData | null> = ref(null);\r\n\r\n  async function fetchData(offer_id: number) {\r\n    const res = await getOfferGet(offer_id);\r\n\r\n    if (!res.error && res.data.info) {\r\n      offerData.value = res.data.info;\r\n    }\r\n  }\r\n\r\n  return {\r\n    fetchData,\r\n    offerData,\r\n  };\r\n};\r\n","import { useFormValidate } from \"@/use/useFormValidate\";\r\nimport { ref } from \"vue\";\r\nimport { useFields } from \"@/views/modules/CrudForms/LacOfferForm/use/useFields\";\r\nimport { useWatch } from \"@/views/modules/CrudForms/LacOfferForm/use/useWatch\";\r\nimport { useSetFormula } from \"@/views/modules/CrudForms/LacOfferForm/use/useSetFormula\";\r\nimport { useInitialParams } from \"@/views/modules/CrudForms/LacOfferForm/use/useInitialParams\";\r\nimport { useCalculate } from \"@/views/modules/CrudForms/LacOfferForm/use/useCalculate\";\r\nimport { useFillForm } from \"@/views/modules/CrudForms/LacOfferForm/use/useFillForm\";\r\nimport { useInit } from \"@/views/modules/CrudForms/LacOfferForm/use/useInit\";\r\nimport { useSubmit } from \"@/views/modules/CrudForms/LacOfferForm/use/useSubmit\";\r\nimport { useData } from \"@/views/modules/CrudForms/LacOfferForm/use/useData\";\r\nimport { useUpdate } from \"@/views/modules/CrudForms/use/useUpdate\";\r\n\r\nexport const useOfferForm = () => {\r\n  const { setFieldRef, validateForm, resetValidations } = useFormValidate();\r\n  const isInit = ref(false);\r\n  const isChanged = ref(true);\r\n\r\n  const { fields } = useFields();\r\n  const { offerData, fetchData } = useData();\r\n  const { submit, submitEdit } = useSubmit(fields);\r\n\r\n  const {\r\n    recalculateFatRate,\r\n    recalculateBasePrice,\r\n    recalculateBasePriceWithVat,\r\n    recalculateCarCount,\r\n    recalculateWeight,\r\n    fetchCalculate,\r\n  } = useCalculate(fields, isInit);\r\n\r\n  const { updatePoint, updateSubject, updateFormula, updateStatus } =\r\n    useUpdate(isInit);\r\n  const { setFormula } = useSetFormula(fields);\r\n  const { initialParams } = useInitialParams(fields);\r\n  const { setWatchers, lockWatchers, unlockWatchers } = useWatch(fields, {\r\n    updateSubject,\r\n    updatePoint,\r\n    updateFormula,\r\n    initialParams,\r\n    recalculateFatRate,\r\n    recalculateBasePrice,\r\n    recalculateBasePriceWithVat,\r\n    recalculateCarCount,\r\n    recalculateWeight,\r\n    fetchCalculate,\r\n  });\r\n\r\n  const { fillForm } = useFillForm(\r\n    fields,\r\n    offerData,\r\n    isInit,\r\n    lockWatchers,\r\n    unlockWatchers\r\n  );\r\n  const { init } = useInit(fields, isInit, offerData, setWatchers);\r\n\r\n  return {\r\n    fields,\r\n    setFieldRef,\r\n    validateForm,\r\n    resetValidations,\r\n    init,\r\n    fetchData,\r\n    fillForm,\r\n    isInit,\r\n    submit,\r\n    submitEdit,\r\n    isChanged,\r\n  };\r\n};\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"p-inputgroup flex-1\" }\nconst _hoisted_2 = {\n  class: \"p-inputgroup-addon\",\n  style: {\"background\":\"#fafafa\"}\n}\n\nimport LacLabel from \"@/views/components/ui/LacLabel.vue\";\r\nimport { computed, nextTick, onMounted, ref } from \"vue\";\r\nimport useVuelidate, { ValidationArgs } from \"@vuelidate/core\";\r\nimport formModule from \"@/views/components/form/form.module.scss\";\r\nimport { FormField } from \"@/views/components/form/types\";\r\nimport { numberPrettifyWithDigits } from \"@/kernel/lib/NumberFormat\";\r\nimport { useToast } from \"primevue/usetoast\";\r\n\r\ninterface Props {\r\n  label?: string;\r\n  placeholder?: string;\r\n  id: string;\r\n  value: string;\r\n  hidden?: string;\r\n  icon?: string;\r\n  rules?: ValidationArgs;\r\n  type?: string;\r\n  disabled?: boolean;\r\n  step?: number;\r\n  min?: number;\r\n  max?: number;\r\n  afterDot?: number;\r\n  suffix?: string;\r\n  localePrettify?: boolean;\r\n}\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'LacInputNumber',\n  props: {\n    label: {},\n    placeholder: {},\n    id: {},\n    value: {},\n    hidden: {},\n    icon: {},\n    rules: {},\n    type: {},\n    disabled: { type: Boolean },\n    step: { default: 1 },\n    min: {},\n    max: {},\n    afterDot: {},\n    suffix: {},\n    localePrettify: { type: Boolean }\n  },\n  emits: [\"update:value\", \"focus\", \"blur\"],\n  setup(__props: any, { expose: __expose, emit }) {\n\nconst props = __props;\n\r\nconst toast = useToast();\r\n\r\n\r\nconst isShow = ref(false);\r\n\r\nconst v$ = useVuelidate(\r\n  { props: { value: props.rules || {} } },\r\n  {\r\n    props,\r\n  }\r\n);\r\n\r\nconst validationError = computed(() =>\r\n  v$.value.$errors.length ? true : false\r\n);\r\n\r\n\r\n\r\nconst value = computed({\r\n  get(): string {\r\n    return props.value;\r\n  },\r\n  set(value: string) {\r\n    emit(\"update:value\", value.replace(\",\", \".\"));\r\n  },\r\n});\r\n\r\nasync function validate(): Promise<boolean> {\r\n  const isValid = await v$.value.$validate();\r\n  if (!isValid) {\r\n    toast.add({\r\n      severity: \"error\",\r\n      summary: props.label,\r\n      detail: v$.value.$errors[0].$message,\r\n    });\r\n  }\r\n  return isValid;\r\n}\r\n\r\nfunction validationReset(): void {\r\n  v$.value.$reset();\r\n}\r\n\r\nasync function onBlur(id: string) {\r\n  await nextTick();\r\n  window.removeEventListener(\"keyup\", onKeyDown);\r\n  if (id === \"base_price\") {\r\n    emit(\"blur\", value.value);\r\n  }\r\n  value.value = props.localePrettify\r\n    ? numberPrettifyWithDigits(clear(value.value), props.afterDot || 0)\r\n    : clear(value.value);\r\n}\r\nfunction onFocus(id: string) {\r\n  if (id === \"base_price\") {\r\n    emit(\"focus\");\r\n  }\r\n  window.addEventListener(\"keyup\", onKeyDown);\r\n}\r\n\r\nfunction clear(value: string): string {\r\n  let res = Number(String(value).replace(/\\s/g, \"\").replace(\",\", \".\"));\r\n\r\n  if (\r\n    typeof props.max === \"number\" &&\r\n    typeof props.min === \"number\" &&\r\n    props.max === props.min\r\n  ) {\r\n    res = props.max;\r\n  } else {\r\n    if (typeof props.max === \"number\" && res > props.max) {\r\n      res = props.max;\r\n    }\r\n\r\n    if (typeof props.min === \"number\" && res < props.min) {\r\n      res = props.min;\r\n    }\r\n  }\r\n\r\n  let result = Number.isNaN(res)\r\n    ? \"0\"\r\n    : typeof props.afterDot === \"number\"\r\n    ? res.toFixed(props.afterDot)\r\n    : String(res);\r\n\r\n  return result;\r\n}\r\n\r\nfunction onKeyDown(e: KeyboardEvent) {\r\n  if (e.keyCode === 38) {\r\n    onUp();\r\n    return;\r\n  }\r\n  if (e.keyCode === 40) {\r\n    onDown();\r\n    return;\r\n  }\r\n}\r\n\r\nfunction split(value: string) {\r\n  return value.replace(\",\", \".\").split(\".\");\r\n}\r\n\r\nfunction onUp() {\r\n  const val = clear(value.value);\r\n  const parsed = split(val);\r\n  const afterDot = props.afterDot || parsed[1] ? parsed[1].length : 0;\r\n  let div = \"1\";\r\n  for (let i = 0; i < afterDot; i++) {\r\n    div += \"0\";\r\n  }\r\n  const readyNumber = props.afterDot\r\n    ? Number(Number(val).toFixed(props.afterDot))\r\n    : Number(val);\r\n  let res =\r\n    (readyNumber * Number(div) + props.step * Number(div)) / Number(div);\r\n\r\n  if (props.max && res > props.max) {\r\n    res = props.max;\r\n  }\r\n\r\n  value.value = clear(String(res));\r\n}\r\nfunction onDown() {\r\n  const val = clear(value.value);\r\n  const parsed = split(val);\r\n  const afterDot = props.afterDot || parsed[1] ? parsed[1].length : 0;\r\n  let div = \"1\";\r\n  for (let i = 0; i < afterDot; i++) {\r\n    div += \"0\";\r\n  }\r\n  const readyNumber = props.afterDot\r\n    ? Number(Number(val).toFixed(props.afterDot))\r\n    : Number(val);\r\n  let res =\r\n    (readyNumber * Number(div) - props.step * Number(div)) / Number(div);\r\n\r\n  if (props.min && res < props.min) {\r\n    res = props.min;\r\n  }\r\n\r\n  value.value = clear(String(res));\r\n}\r\n\r\n__expose<FormField>({ validate, validationReset, id: props.id });\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_InputText = _resolveComponent(\"InputText\")!\n\n  return (_openBlock(), _createBlock(LacLabel, {\n    id: props.id,\n    label: props.label\n  }, {\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createVNode(_component_InputText, {\n          modelValue: value.value,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((value).value = $event)),\n          id: props.id,\n          class: _normalizeClass(['w-100', { 'p-invalid': validationError.value }]),\n          placeholder: props.placeholder,\n          disabled: _ctx.disabled,\n          onFocus: _cache[1] || (_cache[1] = ($event: any) => (onFocus(props.id))),\n          onBlur: _cache[2] || (_cache[2] = ($event: any) => (onBlur(props.id)))\n        }, null, 8, [\"modelValue\", \"id\", \"class\", \"placeholder\", \"disabled\"]),\n        _createElementVNode(\"span\", _hoisted_2, _toDisplayString(props.suffix), 1)\n      ])\n    ]),\n    _: 1\n  }, 8, [\"id\", \"label\"]))\n}\n}\n\n})","import script from \"./LacInputNumber.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./LacInputNumber.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getOfferCalc","async","res","getHttp","get","searchParams","payload","NotRequestException","name","getOfferDelete","offer_id","id","getOfferGet","getOfferList","params","postOfferAdd","post","param","JSON","stringify","postOfferEdit","VAT","numberPrettifyWithDigits","value","digits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","replaceAll","replace","minNumberRules","min","helpers","withMessage","Number","useFields","commonParams","partner","label","items","rules","requiredRules","placeholder","available","point","subject","statusSelect","weight","unit","step","max","afterDot","carCount","baseParams","reactive","base_price","hidden","base_dry_matter","base_price_with_tax","protein_rate","formula","fat_rate","base_protein","protein_correction","base_fat","fat_correction","max_fat","factParams","actual_protein","sort","actual_fat","class_rate","actual_dry_matter","calculateParams","final_price","cost","final_price_with_vat","cost_with_vat","other","other_price","comment","maxLengthRules","fields","useWatch","callbacks","updateSubject","updatePoint","updateFormula","initialParams","recalculateFatRate","recalculateBasePrice","recalculateBasePriceWithVat","recalculateCarCount","recalculateWeight","fetchCalculate","watchLock","ref","watchers","setWatchers","push","watch","partnerId","newValue","parseInt","undefined","pointId","subjValue","newHid","prevHid","status","otherPrice","deep","lockWatchers","unlockWatchers","useSetFormula","dictionary","storeToRefs","useStore","setFormula","offer","available_formula_by_subject","Object","entries","filter","f","_","some","el","map","key","text","foundStandard","find","foundPhysicalWeight","ready_to_sell","useInitialParams","properties","property","fieldsNames","forEach","processParams","fieldset","fieldsetObject","propertiesArray","excludedFields","k","val","field","cond","fix","after_dot","def","toFixed","String","usePrepareData","prepareData","partner_id","car_count","class","formula_type","point_id","useCalculate","isInit","recalculatePriceLock","calculateLock","init","basePrice","basePriceHidden","vat_rate","nextTick","then","basePriceWithVat","parseFloat","Math","debounce","data","error","info","lockCalculate","unlockCalculate","useFillForm","offerData","fillForm","className","useInit","modals","useStoreModal","updatePartner","updateStatus","useUpdate","sortClassPriority","extra","first","not_sorted","second","ultra","sortClassComputed","computed","classes","sortClass","a","b","initSelects","edit","open","AvailableModalsEnum","LOADER","close","useSubmit","router","useRouter","submit","ERROR","SUCCESS","callback","back","submitEdit","useData","fetchData","useOfferForm","setFieldRef","validateForm","resetValidations","useFormValidate","isChanged","_hoisted_1","_hoisted_2","style","_defineComponent","__name","props","icon","type","disabled","Boolean","default","suffix","localePrettify","emits","setup","__props","expose","__expose","emit","toast","useToast","v$","useVuelidate","validationError","$errors","length","set","validate","isValid","$validate","add","severity","summary","detail","$message","validationReset","$reset","onBlur","window","removeEventListener","onKeyDown","clear","onFocus","addEventListener","result","isNaN","e","keyCode","onDown","onUp","split","parsed","div","i","readyNumber","_ctx","_cache","_component_InputText","_resolveComponent","_openBlock","_createBlock","LacLabel","_withCtx","_createElementVNode","_createVNode","modelValue","$event","_normalizeClass","_toDisplayString","__exports__"],"sourceRoot":""}